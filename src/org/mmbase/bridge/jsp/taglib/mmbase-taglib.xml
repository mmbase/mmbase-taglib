<!--
This "enhanced" tld file will be converted to a "normal" tld and a html file.

To convert this file to a standard .tld file you need  an xslt engine like xalan:
java org.apache.xalan.xslt.Process -Q -IN mmbase-taglib.xml -XSL xml2tld.xslt  > mmbase-taglib.tld

To convert this file to html documentation you need  an xslt engine:
java org.apache.xalan.xslt.Process -Q -IN mmbase-taglib.xml -XSL xml2html.xslt


The following additional tags are possible between <tag> and </tag>:

  <info>...</info>

  <example>...</example>


The following additional tags are possible between <attribute> and </attribute>:

  <requirednote></requirednote> (To note that requirement of this attribute
                                 is dependant on other conditions.)

  <info>...</info>

  <possiblevalue> (Use one or more to list a possible values)
    <value>...</value>
    <info>...</info>
  </possiblevalue>

  <examplevalue> (Use one ore more to give some example values)
    <value>...</value>
    <info>...</info>
  </examplevalue>

Use one or more possiblevalue tags if you want to list all possible values. Use
one or more examplevalue tags is you want to give some example values.
-->
<taglib>
  <tlibversion>1.0</tlibversion>
  <jspversion>1.1</jspversion>
  <shortname>mmbase</shortname>
  <uri>http://www.mmbase.org/mmbase-taglib-1.0</uri>
  <info>Tag library for MMBase based on MMCI(MMBase Cloud Interface).</info>
  <tag>
    <name>list</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.NodeListTag</tagclass>
    <teiclass>org.mmbase.bridge.jsp.taglib.NodeProviderTEI</teiclass>
    <bodycontent>JSP</bodycontent>
    <info>The list tag provides a syntax to list objects managed by MMBase.</info>
    <attribute>
      <name>nodes</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>Comma-separated list of nodes, this attribute defines the starting point of the list. The parameter is equivalent to node.</info>
    </attribute>
    <attribute>
      <name>node</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>Node number, or node alias. This attribute defines the starting point of the list.</info>
    </attribute>
    <attribute>
      <name>type</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <info>A comma-separated list of NodeManagers and/or RelationManagers. The list forms a &quot;chain of relations&quot;</info>
      <examplevalue>
        <value>mags</value>
      </examplevalue>
      <examplevalue>
        <value>mags,news</value>
      </examplevalue>
      <examplevalue>
        <value>mags,related,news</value>
      </examplevalue>
      <examplevalue>
        <value>mags,news,images</value>
      </examplevalue>
      <examplevalue>
        <value>mags,related,news,related,images</value>
      </examplevalue>
    </attribute>
    <attribute>
      <name>fields</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>
        Comma-separated list of fields that should be made available in the
        page. The fields are selected from attributes of the corresponding node
        managers defined in type. If the type fields contains more elements e.g.
        type=&quot;mags,news&quot; then it is required to append a prefix to
        each field listed e.g. fields=&quot;mags.title,news.title&quot;. In the
        jsp page the values are available in form of Strings e.g. mags.title is
        available as mags_title and can be accessed using
        &lt;%= mags_title %&gt;.
      </info>
    </attribute>
    <attribute>
      <name>where</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>command</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>
        On a non-multilevel list, you can also do a 'command'. The
        'getList(command)' method from the NodeManager interface will
        be called then.
      </info>
    </attribute>
    <attribute>
      <name>sorted</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>
        The fields on which the result set must be sorted. 
      </info>
    </attribute>
    <attribute>
      <name>direction</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>
        The direction of sorting.
      </info>
      <possiblevalue>
        <value>UP</value>
      </possiblevalue>
      <possiblevalue>
        <value>DOWN</value>
      </possiblevalue>
    </attribute>
    <attribute>
      <name>distinct</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>max</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>The maximum number of results.</info>
    </attribute>
    <attribute>
      <name>offset</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>The start index.</info>
    </attribute>
    <attribute>
      <name>search</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info></info>
    </attribute>
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>
        See the 'id' attribute of the Node tag. 
      </info>    
    </attribute>
    <attribute>
      <name>jspvar</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>
        See the 'jspvar' attribute of the Node tag. 
      </info>    
    </attribute>
<example>&lt;mm:list node="123" type="mags,news" fields="mags.title,news.number"&gt;
  &lt;mm:head&gt;magazine list&lt;/mm:head&gt;
  &lt;%= mags_title %&gt;
&lt;/mm:list&gt;</example>

  </tag>
  <tag>
    <name>related</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.macro.RelatedTag</tagclass>
    <teiclass>org.mmbase.bridge.jsp.taglib.NodeProviderTEI</teiclass>
    <bodycontent>JSP</bodycontent>
    <info>
        The list tag provides a syntax to list objects managed by MMBase
    </info>

    <attribute>
      <name>type</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>fields</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>where</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>command</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>sorted</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>direction</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>distinct</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>max</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>offset</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>search</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>jspvar</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  <tag>
    <name>even</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.macro.ListEvenTag</tagclass>
    <bodycontent>JSP</bodycontent>
    <info>The tag can be used in a list to determine if this is an even item</info>
  </tag>
  <tag>
    <name>odd</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.macro.ListOddTag</tagclass>
    <bodycontent>JSP</bodycontent>
    <info>The tag can be used in a list to determine if this is an even item</info>
  </tag>
  <tag>
    <name>changed</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.macro.ListChangedTag</tagclass>
    <bodycontent>JSP</bodycontent>
    <info>The tag can be used in a list to determine if this is an even item</info>
  </tag>

  <tag>
    <name>first</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.macro.ListFirstTag</tagclass>
    <bodycontent>JSP</bodycontent>
    <info>The tag can be used in a list to determine if this is the
    fist item in the list.</info>
    <attribute>
        <name>inverse</name>
        <required>false</required>
        <rtexprvalue>false</rtexprvalue>
	<info>
	  Inverse the sense of the condition.
	</info>
    </attribute>
  </tag>
  <tag>
    <name>last</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.macro.ListLastTag</tagclass>
    <bodycontent>JSP</bodycontent>
    <info>The tag can be used in a list to determine if this is the
    fist item in the list.</info>
    <attribute>
        <name>inverse</name>
        <required>false</required>
        <rtexprvalue>false</rtexprvalue>
	<info>
	  Inverse the sense of the condition.
	</info>
    </attribute>
  </tag>
  <tag>
    <name>cloud</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.CloudTag</tagclass>
    <teiclass>org.mmbase.bridge.jsp.taglib.CloudTEI</teiclass>
    <bodycontent>JSP</bodycontent>
    <info>The cloud tag initializes the cloud to use.</info>
    <attribute>
      <name>name</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>The name of the cloud.</info>
      <examplevalue>
        <value>mmbase</value>
      </examplevalue>
    </attribute>
    <attribute>
      <name>logon</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>The authentication name to use (account).</info>
    </attribute>
    <attribute>
      <name>pwd</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>The password to use to logon to the cloud.</info>
    </attribute>
    <attribute>
      <name>method</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>
        Describes how to get the authentication information.
      </info>
      <possiblevalue>
        <value>http</value>
        <info>
          Use http protocol to ask name and password
          from the user. If the 'logon' attribute is specified too, then
          logging on will fail if the user does not use that
          username. The 'pwd' attribute will be ignored.
        </info>
      </possiblevalue>
      <possiblevalue>
        <value>logout</value>
        <info>
	  When used 'http' to logon, the browser will store name and
          password. If you want to logon again, then you can first
          'logout'. Then the 'realm' of the http authenication will be
          changed, and you obtain a new possibility to logon after
          that. The cloud you obtain is anonymous.
        </info>
      </possiblevalue>
      <possiblevalue>
        <value>anonymous</value>
        <info>
          Ignore the 'logon' attribute and create (or
          reuse) a cloud with an anonymous user.
        </info>
      </possiblevalue>
      <possiblevalue>
        <value>asis</value>
        <info>
          Ignore the 'logon' attribute and reuse the cloud as
          it is in the session.
        </info>
      </possiblevalue>
    </attribute>
    <attribute>
      <name>authenticate</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>
        The authentitation module which must be used by the security
        system. The default is "name/password", which will do in most
        cases.
      </info>
    </attribute>
    <attribute>
      <name>jspvar</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>
       The name of the Jsp variable to export by cloud. If not
       specified, then a variable with name 'cloud' will exist.
      </info>
    </attribute>

    <example>
&lt;!-- Show titles of all news articles from user kamer (which are in pool kamer_pool)  
only to user kamer --&gt;
&lt;mm:cloud logon="kamer" method="http"&gt;
logged on as: &lt;bean:write name="cloud" property="user.identifier" /&gt;&lt;br /&gt;
&lt;mm:node number="kamer_pool" id="my_node"&gt;
  &lt;mm:related type="news" sorted="number" direction="DOWN"&gt;
     &lt;mm:head&gt;
        &lt;!-- show a small heading, in which also appears the node-number of the pool --&gt;
        &lt;mm:field node="my_node" name="number" /&gt;:
        &lt;mm:field head="number" /&gt;: &lt;mm:field head="title" /&gt;&lt;br /&gt;
     &lt;/mm:head&gt;
     &lt;mm:field name="number" /&gt;: &lt;mm:field name="title" /&gt;&lt;br /&gt;
  &lt;/mm:related&gt;
&lt;/mm:node&gt;
&lt;/mm:list&gt;
&lt;/mm:cloud&gt;
    </example>
    <example>
&lt;!-- To logon on as a different user on my_page.jsp, make a ref to a page with this:  --&gt;
&lt;mm:cloud method="logout" /&gt;
&lt;% response.sendRedirect("http://my_host/my_page.jsp"); %&gt;
    </example>

  </tag>
  <tag>
    <name>info</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.InfoTag</tagclass>
    <info>This tag can be used to call getInfo from Module (can also be done with mod) and NodeManager.</info>
    <bodycontent>JSP</bodycontent>
    <attribute>
        <name>nodemanager</name>
        <required>false</required>
	<rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>module</name>
        <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>id</name>
        <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  <tag>
    <name>node</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.NodeTag</tagclass>
    <teiclass>org.mmbase.bridge.jsp.taglib.NodeProviderTEI</teiclass>
    <info>
      A tag to make a node available. Normally it will enclose
      some field tags.
    </info>
    <attribute>
        <name>number</name>
        <required>false</required>
        <requirednote>Either 'number' or 'parameter' or 'id' must be supplied.</requirednote>
        <rtexprvalue>true</rtexprvalue>
	<info>
	  The nodenumber or alias identifying this node in MMBase.
	</info>
    </attribute>
    <attribute>
        <name>id</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
	<info>
	  With the 'id' attribute you define an unique identifier for
	  this node. At the same time this defines an jsp 'Node'
	  variable with this name. 
        </info>	
    </attribute>
    <attribute>
        <name>parameter</name>
        <required>false</required>
        <requirednote>Either 'number' or 'parameter' must be supplied.</requirednote>
        <rtexprvalue>true</rtexprvalue>
	<info>
 	   The request parameter name which contains the nodenumber or
	   alias indentifying this node in MMBase.
	</info>
    </attribute>    
    <attribute>
        <name>jspvar</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
	<info>
	  Create a JSP variable with this in the body. If you have defined 'fields' too,
	  then these fields will have jsp-variables prefixed with
	  jspvar and an underscore.
	</info>
    </attribute>
    <attribute>
        <name>element</name>
        <required>false</required>
         <rtexprvalue>true</rtexprvalue>
	<info>
	  The nodenumber or alias identifying this node in MMBase.
	</info>
    </attribute>
    <attribute>
        <name>fields</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
	<info>
	  The fields you want to have from this node. Other fields are
	  available as well, but will only be accessible with the
	  field-tag. Field indicated in this 'fields' attribute will
	  also get a jsp-variable.
	</info>
    </attribute>
  </tag>
  <tag>
    <name>field</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.FieldTag</tagclass>
    <info>
      Gets the field 'name' from node 'node' (can also be
      list).
    </info>
    <attribute>
        <name>node</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
	<info>
          The 'id' of the node or list from which this field must be taken.
          By default this is the node or list which is enclosing this field.
        </info>
    </attribute>
    <attribute>
        <name>name</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
	<info>
	  The name of the field to get. 
	</info>
    </attribute>
    <attribute>
        <name>head</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
	<info>
	  Like 'name', but does not return the value of the field, but
	  the GUI-name of the field.
	</info>
    </attribute>
  </tag>
  <tag>
    <name>createalias</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.edit.CreateAliasTag</tagclass>
    <info>
      Lives in a NodeProvider. Creates the bodycontent as an alias for the node.
    </info>
    <attribute>
        <name>parameter</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
	<info>
	  In stead of giving it in the body, you can also indicate in
	  which request parameter the new alias name is.
	</info>
    </attribute>
  </tag>
  <tag>
    <name>listcondition</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.ListConditionTag</tagclass>
    <info>
    Must be used in the body of a list tag. And the body of itself
    will only be evaluated if some condition is true.
    </info>
    <attribute>
        <name>value</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
	<info>
	 The `value' of the condition, in other words what the
         condition is, described with a string. There is a limited set
         available now. They are also availabe as `macro'-tags on this
         tag.
	 </info>
        <possiblevalue>
          <value>first</value>
          <info>
            Show only in first row.
          </info>
        </possiblevalue>
        <possiblevalue>
          <value>last</value>
          <info>
            Show only in last row.
          </info>
        </possiblevalue>
        <possiblevalue>
          <value>odd</value>
          <info>
            Show only when row number is odd.
          </info>
        </possiblevalue>
        <possiblevalue>
          <value>even</value>
          <info>
            Show only when row number is even.
          </info>
        </possiblevalue>
        <possiblevalue>
          <value>changed</value>
          <info>
            Show only when this row differs from the previous row.
          </info>
        </possiblevalue>
    </attribute>
    <attribute>
        <name>inverse</name>
        <required>false</required>
        <rtexprvalue>false</rtexprvalue>
	<info>
	  Inverse the sense of the condition.
	</info>
    </attribute>
    <attribute>
        <name>list</name>
        <required>false</required>
        <rtexprvalue>false</rtexprvalue>
	<info>
	  The id of the list to which this condition must apply
	  to. Default it is the enclosing one.
        </info>
    </attribute>
  </tag>
  <tag>
    <name>nodefield</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.NodeFieldTag</tagclass>
    <info>
    Shows a field from a node without the need of use a node tag with a field tag in its body.
    </info>
    <attribute>
        <name>number</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>field</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  <tag>
    <name>context</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.ContextTag</tagclass>
    <bodycontent>JSP</bodycontent>
    <info>
      <p>
      Groups node-tags. Tags inside a context tag can find each other's
      providing Node. You need this for example when you create a
      relation.
      </p>
      <p>
      In TCP this is called 'create'.
      </p>
      <p>
      A Transaction is a context too, so normally it will suffice to
      use a transaction.
      </p>
    </info>
    <attribute>
        <name>id</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>type</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  <tag>
    <name>createrelation</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.edit.CreateRelationTag</tagclass>
    <info>
    Creates a relation between two nodes.
    </info>
    <attribute>
        <name>role</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
	<info>       
        </info>
    </attribute>
    <attribute>
        <name>id</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
	<info>       
        </info>
    </attribute>
    <attribute>
        <name>source</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
	<info>
         The id of the node which will be on the source side of the relation.
	</info>
    </attribute>
    <attribute>
        <name>destination</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
	<info>
         The id of the node which will be on the source side of the relation.
	</info>
    </attribute>
    <example>
&lt;mm:cloud&gt;
&lt;mm:transaction id="my_transaction"&gt;
&lt;mm:createnode nodemanager="news" id="my_news"&gt;
   &lt;mm:setfield name="title"&gt;Todays news&lt;/mm:setfield&gt;
   &lt;mm:setfield name="subtitle"&gt;There happened a lot today&lt;/mm:setfield&gt;
&lt;/mm:createnode&gt;
&lt;mm:node number="1808" id="my_author" /&gt;
&lt;mm:createrelation role="author" source="my_author" destination="my_news" /&gt;
&lt;/mm:transaction&gt;
&lt;/mm:cloud&gt;
    </example>
  </tag>
  <tag>
    <name>createnode</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.edit.CreateNodeTag</tagclass>
    <teiclass>org.mmbase.bridge.jsp.taglib.NodeProviderTEI</teiclass>
    <info>
    Creates a new node
    </info>
    <attribute>
        <name>nodemanager</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
	<info>   
         The type (NodeManager name) of the new node.
        </info>
        <examplevalue>
          <value>news</value>
        </examplevalue>
        <examplevalue>
          <value>people</value>
        </examplevalue>
    </attribute>
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>
        See the 'id' attribute of the Node tag. 
      </info>    
      <examplevalue>
        <value>a_new_node</value>
      </examplevalue>
    </attribute>
    <attribute>
      <name>jspvar</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>
        See the 'jspvar' attribute of the Node tag. 
      </info>    
    </attribute>
  </tag>
  <tag>
    <name>setfield</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.edit.SetFieldTag</tagclass>
    <teiclass>org.mmbase.bridge.jsp.taglib.edit.SetFieldTEI</teiclass>
    <info>
      Changes the field 'name' from node 'node' (can also be
      list).
    </info>
    <attribute>
        <name>node</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
	<info>
          The 'id' of the node or list from which this field must be taken.
          By default this is the node or list which is enclosing this field.
        </info>
    </attribute>
    <attribute>
        <name>name</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
	<info>
	  The name of the field to set. If this field is not set this tag will
          look for a surrounding fieldlist tag to retrieve name and node from.
	</info>
    </attribute>
  </tag>
  <tag>
    <name>transaction</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.edit.TransactionTag</tagclass>
    <teiclass>org.mmbase.bridge.jsp.taglib.edit.TransactionTEI</teiclass>
    <bodycontent>JSP</bodycontent>
    <info>
     The transaction tag creates a transaction. A transaction is
     a context too.
    </info>
    <attribute>
      <name>name</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>The name of the transaction.</info>
      <examplevalue>
        <value>my_transaction</value>
      </examplevalue>
    </attribute>
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>The id of the transaction. Will be used to put it in a
      context, if possible.</info>
      <examplevalue>
        <value>my_transaction</value>
      </examplevalue>
    </attribute>
    <attribute>
      <name>jspvar</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>
       The name of the Jsp variable to export. If not
       specified, then a variable with name 'trans' will exist.
      </info>
    </attribute>

    <attribute>
      <name>commitonclose</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>
       If the transaction must be committed after the body. The
       default is true.
      </info>
      <possiblevalue>
        <value>true</value>
      </possiblevalue>
      <possiblevalue>
        <value>false</value>
      </possiblevalue>
    </attribute>
  </tag>
  <tag>
    <name>cancel</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.edit.CancelTag</tagclass>
    <bodycontent>none</bodycontent>
    <info>
      Can cancel a transaction with this. 
    </info>
    <attribute>
      <name>transaction</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>The id of the transaction.</info>
    </attribute>
  </tag>
  <tag>
    <name>commit</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.edit.CommitTag</tagclass>
    <bodycontent>none</bodycontent>
    <info>
      Can commit a transaction with this. 
    </info>
    <attribute>
      <name>transaction</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>The id of the transaction.</info>
    </attribute>
  </tag>
  <tag>
    <name>deletenode</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.edit.DeleteNodeTag</tagclass>
    <teiclass>org.mmbase.bridge.jsp.taglib.NodeProviderTEI</teiclass>
    <info>
      This tag extends the `node' tag, and is precisely the same. The
      only difference is that after the body the node will be removed.
    </info>
    <attribute>
        <name>number</name>
        <required>false</required>
        <requirednote>Either 'number' or 'parameter' must be supplied.</requirednote>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>parameter</name>
        <required>false</required>
        <requirednote>Either 'number' or 'parameter' must be supplied.</requirednote>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>fields</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>jspvar</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>    
    <attribute>
        <name>deleterelations</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
        <possiblevalue>
           <value>true</value>
        </possiblevalue>
        <possiblevalue>
           <value>false</value>
        </possiblevalue>
    </attribute>    
  </tag>
  <tag>
    <name>fieldlist</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.FieldListTag</tagclass>
    <bodycontent>JSP</bodycontent>
    <info>A list of fields. A field can list inside a NodeProvider in which case the NodeManager if found by means of 
    the parent node. It can also be stand alone, then you have to supply the 'nodemanager' attribute.
    </info>
    <attribute>
      <name>nodemanager</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>The id of the fieldlist.</info>
    </attribute>
    <attribute>
      <name>type</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>
        The type of fields that should be returned. If not specified, all
        fields are returned.
      </info>
      <possiblevalue>
        <value>create</value>
        <info>
          Defined in NodeManager from the bridge classes, but not used in
          BasicNodeManager. Currently it does nothing special.
        </info>
      </possiblevalue>
      <possiblevalue>
        <value>edit</value>
        <info>
          Return only those fields that should appear in the input area of the
          editor.
        </info>
      </possiblevalue>
      <possiblevalue>
        <value>list</value>
        <info>
          Return only those fields that should appear in the list area of the
          editor.
        </info>
      </possiblevalue>
      <possiblevalue>
        <value>search</value>
        <info>
          Return only those fields that should appear in the search area of the
          editor.
        </info>
      </possiblevalue>
    </attribute>
  </tag>
  <tag>
    <name>fieldinfo</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.FieldInfoTag</tagclass>
    <info>This thing can be used inside a FieldListTag, or directly
    inside a NodeProvider if you indicate with the field attribute
    about which field you want to have information. It can have a
    body, which will be added to the produced value, if this is not null.</info>
    <attribute>
      <name>type</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <possiblevalue>
        <value>name</value>
        <info>The name of the field</info>
      </possiblevalue>
      <possiblevalue>
        <value>guiname</value>
        <info>The GUI name of the field (can be in other language)</info>
      </possiblevalue>
      <possiblevalue>
        <value>input</value>         
        <info>A form entry for the field. This can only be used if the
        FieldList was in a NodeProvider tag. If the FieldList has an
        id, the names of the form entries will be prefixed with it.
        </info>
      </possiblevalue>
      <possiblevalue>
        <value>useinput</value>         
        <info>If you have create a form with type="input" and this
        form was submitted, then you can use type="useinput" under a
        NodeProvider, and it will get the request/post parameter
        produced by "input" and make the right changes to the node.
        </info>
      </possiblevalue>      
      <possiblevalue>
        <value>value</value>         
        <info>The value of this field. Can only be used if in a NodeProviderTag.
        </info>
      </possiblevalue>

      <possiblevalue>
        <value>guivalue</value>         
        <info>The guivalue of this field. Can only be used if in a NodeProviderTag.
        </info>
      </possiblevalue>
    </attribute>
    <attribute>
      <name>field</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <info>The field about which you want to have information. Only
      if you want to use this tag directly under a nodeprovider tag.</info>
    </attribute>
  </tag>
  <tag>
    <name>nodeinfo</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.NodeInfoTag</tagclass>
    <info>This thing can be used inside a NodeProvider tag, to get
    certain information about the node.</info>
    <attribute>
      <name>type</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <possiblevalue>
        <value>nodemanager</value>
        <info>The name of the NodeManager of the node.</info>
      </possiblevalue>
      <possiblevalue>
        <value>guinodemanager</value>
        <info>The GUI name of NodeManager of the node.</info>
      </possiblevalue>
    </attribute>  
    <example>&lt;mm:node number="1645"&gt;
Node of type &lt;mm:nodeinfo type="guinodemanager" /&gt;&lt;br /&gt;
  &lt;mm:fieldlist type="edit"&gt;
    &lt;em&gt;&lt;mm:fieldinfo type="guiname" /&gt;&lt;/em&gt;:    &lt;mm:fieldinfo type="value" /&gt;&lt;br /&gt;
  &lt;/mm:fieldlist&gt; 
&lt;/mm:node&gt;
</example>

  </tag>
  <tag>
    <name>present</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.pageflow.PresentTag</tagclass>
    <info>
    Checks if a certain key is present in the parent Context tag.
    </info>
    <attribute>
        <name>key</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
	<info>
	 </info>
    </attribute>
  </tag>
  <tag>
    <name>notpresent</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.pageflow.NotPresentTag</tagclass>
    <info>
    Checks if a certain key is missing in the parent Context tag.
    </info>
    <attribute>
        <name>key</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
	<info>
	 </info>
    </attribute>
  </tag>
  <tag>
    <name>export</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.ExportTag</tagclass>
    <teiclass>org.mmbase.bridge.jsp.taglib.ExportTEI</teiclass>
    <info>
    Can be used to create an jsp variable from a variable in the context.
    </info>
    <attribute>
        <name>context</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
	<info>
	If you want to get it from another context than the direct parent.
	</info>
    </attribute>
    <attribute>
        <name>key</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
	<info>
	The key of the variable to get.
	</info>
    </attribute>
    <attribute>
        <name>jspvar</name>
        <required>true</required>
        <rtexprvalue>false</rtexprvalue>
	<info>
	The name of the variable to create.
	</info>
    </attribute>
    <attribute>
        <name>type</name>
        <required>false</required>
        <rtexprvalue>false</rtexprvalue>
	<info>
	The type of the variable to create (default java.lang.Object)
	</info>
	<possiblevalue>
          <value>Object</value>
        </possiblevalue>
	<possiblevalue>
          <value>String</value>
        </possiblevalue>
	<possiblevalue>
          <value>Node</value>
        </possiblevalue>
    </attribute>
  </tag>
  <tag>
    <name>import</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.ImportTag</tagclass>
    <info>
    To put Strings in the session (Perhaps we could change it, to make
    it possible to put other things in it too).
    </info>
    <attribute>
        <name>key</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
	<info>	
	</info>
    </attribute>
  </tag>
  <tag>
    <name>remove</name>
    <tagclass>org.mmbase.bridge.jsp.taglib.RemoveTag</tagclass>
    <info>
    Remove an object from the context.
    </info>
    <attribute>
        <name>key</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
	<info>	
	</info>
    </attribute>
  </tag>
</taglib>
